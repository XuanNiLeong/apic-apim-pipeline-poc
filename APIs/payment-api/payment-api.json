{
  "openapi": "3.0.3",
  "info": {
    "title": "Payment API",
    "version": "1.0.0",
    "description": "API for processing and managing payments.",
    "contact": {
      "name": "Payment API Team",
      "email": "api-support@example.com",
      "url": "https://api.example.com/support"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://api.example.com/v1"
    }
  ],
  "tags": [
    {
      "name": "Payments",
      "description": "Operations related to payment processing"
    },
    {
      "name": "Transactions",
      "description": "Operations related to transaction management"
    }
  ],
  "paths": {
    "/payments": {
      "post": {
        "tags": ["Payments"],
        "summary": "Initiate a payment",
        "description": "Creates a new payment transaction with the provided payment details",
        "operationId": "createPayment",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/payments/{paymentId}": {
      "get": {
        "tags": ["Payments"],
        "summary": "Get payment status",
        "description": "Retrieves the status and details of a specific payment by its ID",
        "operationId": "getPaymentStatus",
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the payment",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment details retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              }
            }
          },
          "404": {
            "description": "Payment not found"
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "tags": ["Transactions"],
        "summary": "List transactions",
        "description": "Retrieves a list of transactions filtered by optional date range parameters",
        "operationId": "listTransactions",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "description": "Filter transactions starting from this date (inclusive)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "Filter transactions up to this date (inclusive)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PaymentRequest": {
        "type": "object",
        "required": ["amount", "currency", "paymentMethod"],
        "properties": {
          "amount": {
            "type": "number",
            "format": "float",
            "example": 49.99
          },
          "currency": {
            "type": "string",
            "example": "USD"
          },
          "paymentMethod": {
            "type": "object",
            "required": ["type", "details"],
            "properties": {
              "type": {
                "type": "string",
                "example": "card"
              },
              "details": {
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        }
      },
      "PaymentResponse": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "example": "pay_123456789"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "completed", "failed"],
            "example": "completed"
          },
          "amount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "paymentId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}
